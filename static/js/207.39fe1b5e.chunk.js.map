{"version":3,"file":"static/js/207.39fe1b5e.chunk.js","mappings":"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","sources":["services/GetTweets.jsx","services/GetTweetById.jsx","components/userListItem/UserListItem.styled.jsx","components/userListItem/UserListItem.jsx","components/usersList/UsersList.jsx","components/tweets/Tweets.jsx","pages/TweetsPage.jsx"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const GetTweets = async () => {\r\n  const BASE_URL = 'https://6442731176540ce2258c6d17.mockapi.io';\r\n  const response = await axios.get(`${BASE_URL}/users`);\r\n\r\n  return response.data;\r\n};\r\n","import axios from 'axios';\r\n\r\nexport const GetTweetById = async tweetId => {\r\n  const BASE_URL = 'https://6442731176540ce2258c6d17.mockapi.io';\r\n  const response = await axios.get(`${BASE_URL}/users/${tweetId}`);\r\n\r\n  return response.data;\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const TweetContainer = styled.div`\r\n  position: relative;\r\n  width: 380px;\r\n  height: 460px;\r\n  background: linear-gradient(\r\n    114.99deg,\r\n    #471ca9 -0.99%,\r\n    #5736a3 54.28%,\r\n    #4b2a99 78.99%\r\n  );\r\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\r\n  border-radius: 20px;\r\n`;\r\n\r\nexport const Line = styled.hr`\r\n  margin-top: 18px;\r\n  height: 8px;\r\n  background: #ebd8ff;\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\r\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\r\n`;\r\n\r\nexport const ImgUser = styled.img`\r\n  position: absolute;\r\n  top: 178px;\r\n  left: 150px;\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 50%;\r\n  border: 8px solid #ebd8ff;\r\n`;\r\n\r\nexport const TweetsNumber = styled.p`\r\n  margin-top: 62px;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nexport const Btn = styled.button`\r\n  display: block;\r\n  margin-top: 26px;\r\n  width: 196px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: 14px 56px;\r\n`;\r\n","import { useState } from 'react';\r\nimport { GetTweetById } from '../../services/GetTweetById';\r\nimport Logo from '../../images/Logo.png';\r\nimport picture from '../../images/picture.png';\r\n\r\nimport {\r\n  TweetContainer,\r\n  Line,\r\n  ImgUser,\r\n  TweetsNumber,\r\n  Btn,\r\n} from './UserListItem.styled';\r\n\r\nexport const UserListItem = ({\r\n  oneUser: { id, user, tweets, followers, avatar },\r\n}) => {\r\n  const [isFollowing, setIsFollowing] = useState(false);\r\n  const [newFollowers, setNewFollowers] = useState(followers);\r\n\r\n  const addFollower = followerId => {\r\n    GetTweetById(followerId).then(resp => {\r\n      console.log(resp.followers);\r\n\r\n      setNewFollowers(prevState => prevState + 1);\r\n      setIsFollowing(true);\r\n    });\r\n  };\r\n\r\n  const deleteFollower = followerId => {\r\n    GetTweetById(followerId).then(resp => {\r\n      console.log(resp.followers);\r\n\r\n      setNewFollowers(prevState => prevState - 1);\r\n      setIsFollowing(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TweetContainer>\r\n        <img src={Logo} alt=\"logo\" />\r\n        <img src={picture} alt=\"tweet\" />\r\n        <Line />\r\n        <ImgUser src={avatar} alt=\"avatar\" />\r\n        <p>{user}</p>\r\n        <TweetsNumber>{tweets} tweets</TweetsNumber>\r\n        <p>{newFollowers} followers</p>\r\n        {isFollowing ? (\r\n          <Btn type=\"button\" onClick={() => addFollower(id)}>\r\n            following\r\n          </Btn>\r\n        ) : (\r\n          <Btn type=\"button\" onClick={() => deleteFollower(id)}>\r\n            follow\r\n          </Btn>\r\n        )}\r\n      </TweetContainer>\r\n    </>\r\n  );\r\n};\r\n","import { UserListItem } from '../userListItem/UserListItem';\r\n\r\nexport const UsersList = ({ users }) => {\r\n  return (\r\n    <ul>\r\n      {users.map(user => {\r\n        return (\r\n          <li key={user.id}>\r\n            <UserListItem oneUser={user} />\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport 'react-loading-skeleton/dist/skeleton.css';\r\nimport { GetTweets } from '../../services/GetTweets';\r\nimport { UsersList } from '../usersList/UsersList';\r\n\r\nconst getInitialUsers = () => {\r\n  const savedUsers = localStorage.getItem('users');\r\n\r\n  if (savedUsers !== null) {\r\n    const parsedUsers = JSON.parse(savedUsers);\r\n\r\n    return parsedUsers;\r\n  }\r\n  return [];\r\n};\r\n\r\nexport const Tweets = () => {\r\n  const [users, setUsers] = useState(getInitialUsers);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('users', JSON.stringify(users));\r\n  }, [users]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    GetTweets()\r\n      .then(response => {\r\n        console.log(response);\r\n        setUsers(response);\r\n      })\r\n      .catch(error => {\r\n        setError(error.message);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/\">back</Link>\r\n      {loading && (\r\n        <div>\r\n          <Skeleton count={12} width={380} height={460} />\r\n        </div>\r\n      )}\r\n      {error && <p>{error}</p>}\r\n      {!error && !loading && <UsersList users={users} />}\r\n    </>\r\n  );\r\n};\r\n","import { Tweets } from '../components/tweets/Tweets';\r\n\r\nconst TweetsPage = () => {\r\n  return <Tweets />;\r\n};\r\n\r\nexport default TweetsPage;\r\n"],"names":["GetTweets","axios","response","data","GetTweetById","tweetId","TweetContainer","styled","Line","ImgUser","TweetsNumber","Btn","UserListItem","oneUser","id","user","tweets","followers","avatar","useState","isFollowing","setIsFollowing","newFollowers","setNewFollowers","src","Logo","alt","picture","type","onClick","then","resp","console","log","prevState","UsersList","users","map","getInitialUsers","savedUsers","localStorage","getItem","JSON","parse","Tweets","setUsers","loading","setLoading","error","setError","useEffect","setItem","stringify","catch","message","finally","to","count","width","height"],"sourceRoot":""}